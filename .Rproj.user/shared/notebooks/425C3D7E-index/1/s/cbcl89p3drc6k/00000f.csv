"0",""
"0","#Forecast2[c(2,4:5,7,11,13,15,17,19,24:25)] %>%"
"0","#  kbl(caption = ""Sampling Locations and Results"") %>%"
"0","#  #kable_classic(""striped"" ,full_width = T, html_font = ""Cambria"") %>%"
"0","#  kable_styling(bootstrap_options = c(""striped"",""condensed""),full_width=F,position = ""left"", "
"0","#                font_size = 12, html_font = ""Cambria"") %>% "
"0","#  column_spec(1, border_right = T) %>%"
"0","#  column_spec(11,bold=T)"
"0",""
"0",""
"0",""
"0","#TrackForecast<-ForecastRecord[c(1,2,3,4:5,7,9,11,13,15,17,19,21,22,23,24,25)] #Activate to reset Forecast Tracker"
"0",""
"0","#write.csv(TrackForecast,""TrackForecast.csv"")"
"0",""
"0",""
"0","#library(readr)"
"0","#TrackForecast <- read_csv(""TrackForecast.csv"", "
"0","#    col_types = cols(...1 = col_skip(), dateTime = col_datetime(format = ""%Y-%m-%d %H:%M:%S""), "
"0","#        `Temperature, water` = col_number(), "
"0","#        pH = col_number(), `Inorganic nitrogen (nitrate and nitrite)` = col_number(), "
"0","#        Precipitation = col_number(), `Stream flow, mean. daily` = col_number(), "
"0","#        `Height, gage` = col_number(), `Specific conductance` = col_number(), "
"0","#        Oxygen = col_number(), ecoli = col_number()))"
"0",""
"0","TrackForecast <- read_csv(""TrackForecast.csv"", "
"0","    col_types = cols(...1 = col_skip(), Date = col_datetime(format = ""%Y-%m-%d %H:%M:%S""), "
"0","        `Water Temperature (C)` = col_number(), "
"0","        pH = col_number(), Inorganic.nitrogen..nitrate.and.nitrite. = col_number(), "
"0","        `Precipitation (in)` = col_number(), "
"0","        `River Flow (cfs)` = col_number(), "
"0","        `Water Height (ft)` = col_number(), "
"0","        `Specific Conductivity` = col_number(), "
"0","        `Dissolved Oxygen (mg/L)` = col_number(), "
"0","        Latitude = col_character(), Longitude = col_character(), "
"0","        `E. coli (MPN/100 mL)` = col_number()))"
"0",""
"0",""
"0",""
"0",""
"0","TrackForecast[c((nrow(TrackForecast) + 1):(nrow(TrackForecast) + nrow(ForecastRecord))),] <- ForecastRecord[c(1,2,3,4:5,7,9,11,13,15,17,19,21,22,23,24,25)]"
"0",""
"0",""
"0","write.csv(TrackForecast,""TrackForecast.csv"")"
"0",""
"0",""
"0","CSSample <- read_csv(""CSSample.csv"", col_types = cols(Date = col_date(format = ""%m/%d/%Y""), "
"0","    Time = col_time(format = ""%H:%M""), Sample_Number = col_skip(), "
"0","    `Turbidity (NTUs)` = col_number(), `E. coli Sample (MPN/100 mL)` = col_number()))"
"0",""
"0","CSSample$Date<-format(as.Date(CSSample$Date, format=""%Y-%m-%d""))"
"0",""
"0",""
"0","TrackForecast$Time <- format(as.POSIXct(TrackForecast$Date), format = ""%H:%M:%S"") "
"0",""
"0",""
"0",""
"0","data.table::setnames(ForecastResults, old = c(""Time.x"",""Time.y"",""E. coli (MPN/100 mL)""),"
"0","                     new = c(""SampleTime"",""PredictionTime"",""E. coli Prediction (MPN/100 mL)""))"
"0",""
"0","write.csv(ForecastResults[,c(1,2,6:15,4,5,3,19,21,20)], ""ForecastResults.csv"")"
