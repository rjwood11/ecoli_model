"0",""
"0","sites_millcreek = c(""03431060"", ""03430550"", ""03431083"",""03431000"")"
"0","sites_harpeth = c(""0343233905"", ""03432400"", ""034324146"",""03432800"", ""03434500"", ""03433500"",""03432350"")"
"0","sites_richland = c(""03431700"", ""03431655"")"
"0","parameter_codes = c(""00060"", ""00300"")"
"0",""
"0",""
"0","sites = readNWISsite(siteNumbers=c(sites_millcreek, sites_harpeth, sites_richland))"
"0","site_coords = sites[c(2:3,5:6,7:8,11:13),]"
"0","data.table::setnames(site_coords, old = c(""dec_lat_va""),"
"0","data.table::setnames(site_coords, old = c(""dec_long_va""),"
"0","                     new = c(""Longitude""))"
"0",""
"0","# Just 0343233905 to demonstrate concept"
"0",""
"0","                          "
"0","#today_data = readNWISdata(sites=c('0343233905'), service=""iv""))"
"0","                          "
"0",""
"0",""
"0",""
"0","today=today_data %>% "
"0","  group_by(site_no) %>%"
"0","  slice(which.max(as.POSIXct(dateTime,format = '%Y-%m-%d %H:%M:%S')))"
"0",""
"0","Codelist<-vapply(strsplit(names(today)[c(4,6,8,10,12,14,16,18)],""_""), `[`, 2, FUN.VALUE=character(1))"
"0",""
"0",""
"0","#PcodeLookup<-function(x) { "
"0",""
"0",""
"0","PRCP = xpathSApply(parsed_doc, path =""/html/body/app-root/app-precipitation/one-column-layout/wu-header/sidenav/mat-sidenav-container/mat-sidenav-content/div/section/div[2]/div[2]/div[1]/lib-precipitation-liquid-accumulation/div/div/div/div[1]/div/div[2]/div[2]/div/span[2]/text()"", xmlValue)"
"0",""
"0",""
"0","url = ""https://www.wunderground.com/weather/us/tn/franklin/35.92,-86.86"""
"0","source = readLines(url, encoding = ""UTF-8"",warn=F)"
"0","parsed_doc = htmlParse(source, encoding = ""UTF-8"")"
"0","WSF5 <- xpathSApply(parsed_doc, path = '/html/body/app-root/app-today/one-column-layout/wu-header/sidenav/mat-sidenav-container/mat-sidenav-content/div/section/div[3]/div[1]/div/div[1]/div[1]/lib-city-current-conditions/div/div[3]/div/div[2]/p/strong/lib-display-unit/span/span[1]', xmlValue)"
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0","# E.coli = SQUAREROOT(PRCP) + river.flow.cfs + SQUARE(DO) + SQUARE(SINDOY)"
"0","# "
"0","## Hwy 100 Sampling Location - MLR"
"0","## Ecoli = -136 + 6468*(PRCP) + 1.416*(discharge) "
"0","## Decision Criteria = 235"
"0","#today$Latitude<-Lat"
"0","#today$Longitude<-Long"
"0",""
"0","LocLookup <- data.frame(Location, site_no)"
"0",""
"0","Forecast1<-LocLookup"
"0","Forecast$Latitude<-Lat"
"0","b<-as.numeric(PRCP)"
"0","c<-as.numeric(TAVG)"
"0","d<-as.numeric(WSF5)"
"0","e<-Forecast$`Stream flow, mean. daily`"
"0",""
"0","Forecast = Forecast %>% mutate(Status = ifelse(ecoli > 235, ""Warning"", "
"0","#site_coords$Status[is.na(site_coords$Status)] = 'Data Unavailable'"
"0",""
"0","cols = c(""Safe"" = ""green"", ""Warning"" = ""red"", ""Caution"" = ""yellow"", ""Data Unavailable"" = ""gray"")"
